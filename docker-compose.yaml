networks:
    carolina-network:
        driver: bridge

volumes:
    carolina-database:
        driver: local

services:
    auth:
        build:
            context: ./server/authorization
            dockerfile: dockerfile
        image: carolina-auth-server:1.0
        container_name: carolina-auth-server
        hostname: carolina-auth-server
        restart: always
        ports:
            - 3001:3000
        volumes:
            - ./authorization:/usr/src/app
        command: ["yarn", "dev"]
        depends_on:
            - database
            - rabbitmq
        networks:
            - carolina-network
        deploy:
            resources:
                limits:
                    memory: 200M
    users:
        build:
            context: ./server/users
            dockerfile: dockerfile
        image: carolina-users-server:1.0
        container_name: carolina-users-server
        hostname: carolina-users-server
        restart: always
        ports:
            - 3002:3000
        volumes:
            - ./users:/usr/src/app
        command: ["yarn", "dev"]
        depends_on:
            - database
            - rabbitmq
        networks:
            - carolina-network
        deploy:
            resources:
                limits:
                    memory: 200M
    publications:
        build:
            context: ./server/publications
            dockerfile: dockerfile
        image: carolina-publications-server:1.0
        container_name: carolina-publications-server
        hostname: carolina-publications-server
        restart: always
        ports:
            - 3003:3000
        volumes:
            - ./publications:/usr/src/app
        command: ["yarn", "dev"]
        depends_on:
            - database
            - rabbitmq
        networks:
            - carolina-network
        deploy:
            resources:
                limits:
                    memory: 200M

    notification:
        build:
            context: ./server/notification
            dockerfile: dockerfile
        image: carolina-notification-server:1.0
        container_name: carolina-notification-server
        hostname: carolina-notification-server
        restart: always
        ports:
            - 3004:3000
        volumes:
            - ./notification:/usr/src/app
        command: ["yarn", "dev"]
        depends_on:
            - database
            - rabbitmq
        networks:
            - carolina-network
        deploy:
            resources:
                limits:
                    memory: 200M

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        hostname: rabbitmq
        ports:
            - 5672:5672 # Porta padr√£o do RabbitMQ
            - 15672:15672 # Porta para acessar a interface de gerenciamento
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        volumes:
            - ./rabbitmq:/var/lib/rabbitmq
        networks:
            - carolina-network

    database:
        image: postgres:latest
        container_name: carolina-database
        hostname: carolina-database
        restart: always
        ports:
            - 5434:5432
        environment:
            POSTGRES_USER: admin
            POSTGRES_PASSWORD: admin
        volumes:
            - carolina-database:/var/lib/postgresql/data
        networks:
            - carolina-network

    nginx:
        build:
            context: ./server/nginx
            dockerfile: dockerfile
        image: carolina-nginx:1.0
        hostname: carolina-nginx
        container_name: carolina-nginx
        ports:
            - 3000:3000
        depends_on:
            - auth
            - users
            - publications
        networks:
            - carolina-network
